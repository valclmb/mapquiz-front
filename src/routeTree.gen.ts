/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TrainingRouteImport } from './routes/training'
import { Route as SocialRouteImport } from './routes/social'
import { Route as QuizRouteImport } from './routes/quiz'
import { Route as IndexRouteImport } from './routes/index'

const TrainingRoute = TrainingRouteImport.update({
  id: '/training',
  path: '/training',
  getParentRoute: () => rootRouteImport,
} as any)
const SocialRoute = SocialRouteImport.update({
  id: '/social',
  path: '/social',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizRoute = QuizRouteImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/quiz': typeof QuizRoute
  '/social': typeof SocialRoute
  '/training': typeof TrainingRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/quiz': typeof QuizRoute
  '/social': typeof SocialRoute
  '/training': typeof TrainingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/quiz': typeof QuizRoute
  '/social': typeof SocialRoute
  '/training': typeof TrainingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/quiz' | '/social' | '/training'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/quiz' | '/social' | '/training'
  id: '__root__' | '/' | '/quiz' | '/social' | '/training'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  QuizRoute: typeof QuizRoute
  SocialRoute: typeof SocialRoute
  TrainingRoute: typeof TrainingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/training': {
      id: '/training'
      path: '/training'
      fullPath: '/training'
      preLoaderRoute: typeof TrainingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/social': {
      id: '/social'
      path: '/social'
      fullPath: '/social'
      preLoaderRoute: typeof SocialRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  QuizRoute: QuizRoute,
  SocialRoute: SocialRoute,
  TrainingRoute: TrainingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
