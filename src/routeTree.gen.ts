/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TrainingRouteImport } from './routes/training'
import { Route as QuizRouteImport } from './routes/quiz'
import { Route as BugReportRouteImport } from './routes/bug-report'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedSocialRouteImport } from './routes/_authenticated/social'
import { Route as AuthenticatedMultiplayerIndexRouteImport } from './routes/_authenticated/multiplayer/index'
import { Route as AuthenticatedMultiplayerLobbyIdRouteImport } from './routes/_authenticated/multiplayer/$lobbyId'
import { Route as AuthenticatedMultiplayerLobbyIdIndexRouteImport } from './routes/_authenticated/multiplayer/$lobbyId/index'
import { Route as AuthenticatedMultiplayerLobbyIdResultRouteImport } from './routes/_authenticated/multiplayer/$lobbyId/result'
import { Route as AuthenticatedMultiplayerLobbyIdLobbyRouteImport } from './routes/_authenticated/multiplayer/$lobbyId/lobby'
import { Route as AuthenticatedMultiplayerLobbyIdGameRouteImport } from './routes/_authenticated/multiplayer/$lobbyId/game'

const TrainingRoute = TrainingRouteImport.update({
  id: '/training',
  path: '/training',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizRoute = QuizRouteImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const BugReportRoute = BugReportRouteImport.update({
  id: '/bug-report',
  path: '/bug-report',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSocialRoute = AuthenticatedSocialRouteImport.update({
  id: '/social',
  path: '/social',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedMultiplayerIndexRoute =
  AuthenticatedMultiplayerIndexRouteImport.update({
    id: '/multiplayer/',
    path: '/multiplayer/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedMultiplayerLobbyIdRoute =
  AuthenticatedMultiplayerLobbyIdRouteImport.update({
    id: '/multiplayer/$lobbyId',
    path: '/multiplayer/$lobbyId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedMultiplayerLobbyIdIndexRoute =
  AuthenticatedMultiplayerLobbyIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedMultiplayerLobbyIdRoute,
  } as any)
const AuthenticatedMultiplayerLobbyIdResultRoute =
  AuthenticatedMultiplayerLobbyIdResultRouteImport.update({
    id: '/result',
    path: '/result',
    getParentRoute: () => AuthenticatedMultiplayerLobbyIdRoute,
  } as any)
const AuthenticatedMultiplayerLobbyIdLobbyRoute =
  AuthenticatedMultiplayerLobbyIdLobbyRouteImport.update({
    id: '/lobby',
    path: '/lobby',
    getParentRoute: () => AuthenticatedMultiplayerLobbyIdRoute,
  } as any)
const AuthenticatedMultiplayerLobbyIdGameRoute =
  AuthenticatedMultiplayerLobbyIdGameRouteImport.update({
    id: '/game',
    path: '/game',
    getParentRoute: () => AuthenticatedMultiplayerLobbyIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bug-report': typeof BugReportRoute
  '/quiz': typeof QuizRoute
  '/training': typeof TrainingRoute
  '/social': typeof AuthenticatedSocialRoute
  '/multiplayer/$lobbyId': typeof AuthenticatedMultiplayerLobbyIdRouteWithChildren
  '/multiplayer': typeof AuthenticatedMultiplayerIndexRoute
  '/multiplayer/$lobbyId/game': typeof AuthenticatedMultiplayerLobbyIdGameRoute
  '/multiplayer/$lobbyId/lobby': typeof AuthenticatedMultiplayerLobbyIdLobbyRoute
  '/multiplayer/$lobbyId/result': typeof AuthenticatedMultiplayerLobbyIdResultRoute
  '/multiplayer/$lobbyId/': typeof AuthenticatedMultiplayerLobbyIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bug-report': typeof BugReportRoute
  '/quiz': typeof QuizRoute
  '/training': typeof TrainingRoute
  '/social': typeof AuthenticatedSocialRoute
  '/multiplayer': typeof AuthenticatedMultiplayerIndexRoute
  '/multiplayer/$lobbyId/game': typeof AuthenticatedMultiplayerLobbyIdGameRoute
  '/multiplayer/$lobbyId/lobby': typeof AuthenticatedMultiplayerLobbyIdLobbyRoute
  '/multiplayer/$lobbyId/result': typeof AuthenticatedMultiplayerLobbyIdResultRoute
  '/multiplayer/$lobbyId': typeof AuthenticatedMultiplayerLobbyIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/bug-report': typeof BugReportRoute
  '/quiz': typeof QuizRoute
  '/training': typeof TrainingRoute
  '/_authenticated/social': typeof AuthenticatedSocialRoute
  '/_authenticated/multiplayer/$lobbyId': typeof AuthenticatedMultiplayerLobbyIdRouteWithChildren
  '/_authenticated/multiplayer/': typeof AuthenticatedMultiplayerIndexRoute
  '/_authenticated/multiplayer/$lobbyId/game': typeof AuthenticatedMultiplayerLobbyIdGameRoute
  '/_authenticated/multiplayer/$lobbyId/lobby': typeof AuthenticatedMultiplayerLobbyIdLobbyRoute
  '/_authenticated/multiplayer/$lobbyId/result': typeof AuthenticatedMultiplayerLobbyIdResultRoute
  '/_authenticated/multiplayer/$lobbyId/': typeof AuthenticatedMultiplayerLobbyIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bug-report'
    | '/quiz'
    | '/training'
    | '/social'
    | '/multiplayer/$lobbyId'
    | '/multiplayer'
    | '/multiplayer/$lobbyId/game'
    | '/multiplayer/$lobbyId/lobby'
    | '/multiplayer/$lobbyId/result'
    | '/multiplayer/$lobbyId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bug-report'
    | '/quiz'
    | '/training'
    | '/social'
    | '/multiplayer'
    | '/multiplayer/$lobbyId/game'
    | '/multiplayer/$lobbyId/lobby'
    | '/multiplayer/$lobbyId/result'
    | '/multiplayer/$lobbyId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/bug-report'
    | '/quiz'
    | '/training'
    | '/_authenticated/social'
    | '/_authenticated/multiplayer/$lobbyId'
    | '/_authenticated/multiplayer/'
    | '/_authenticated/multiplayer/$lobbyId/game'
    | '/_authenticated/multiplayer/$lobbyId/lobby'
    | '/_authenticated/multiplayer/$lobbyId/result'
    | '/_authenticated/multiplayer/$lobbyId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  BugReportRoute: typeof BugReportRoute
  QuizRoute: typeof QuizRoute
  TrainingRoute: typeof TrainingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/training': {
      id: '/training'
      path: '/training'
      fullPath: '/training'
      preLoaderRoute: typeof TrainingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bug-report': {
      id: '/bug-report'
      path: '/bug-report'
      fullPath: '/bug-report'
      preLoaderRoute: typeof BugReportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/social': {
      id: '/_authenticated/social'
      path: '/social'
      fullPath: '/social'
      preLoaderRoute: typeof AuthenticatedSocialRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/multiplayer/': {
      id: '/_authenticated/multiplayer/'
      path: '/multiplayer'
      fullPath: '/multiplayer'
      preLoaderRoute: typeof AuthenticatedMultiplayerIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/multiplayer/$lobbyId': {
      id: '/_authenticated/multiplayer/$lobbyId'
      path: '/multiplayer/$lobbyId'
      fullPath: '/multiplayer/$lobbyId'
      preLoaderRoute: typeof AuthenticatedMultiplayerLobbyIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/multiplayer/$lobbyId/': {
      id: '/_authenticated/multiplayer/$lobbyId/'
      path: '/'
      fullPath: '/multiplayer/$lobbyId/'
      preLoaderRoute: typeof AuthenticatedMultiplayerLobbyIdIndexRouteImport
      parentRoute: typeof AuthenticatedMultiplayerLobbyIdRoute
    }
    '/_authenticated/multiplayer/$lobbyId/result': {
      id: '/_authenticated/multiplayer/$lobbyId/result'
      path: '/result'
      fullPath: '/multiplayer/$lobbyId/result'
      preLoaderRoute: typeof AuthenticatedMultiplayerLobbyIdResultRouteImport
      parentRoute: typeof AuthenticatedMultiplayerLobbyIdRoute
    }
    '/_authenticated/multiplayer/$lobbyId/lobby': {
      id: '/_authenticated/multiplayer/$lobbyId/lobby'
      path: '/lobby'
      fullPath: '/multiplayer/$lobbyId/lobby'
      preLoaderRoute: typeof AuthenticatedMultiplayerLobbyIdLobbyRouteImport
      parentRoute: typeof AuthenticatedMultiplayerLobbyIdRoute
    }
    '/_authenticated/multiplayer/$lobbyId/game': {
      id: '/_authenticated/multiplayer/$lobbyId/game'
      path: '/game'
      fullPath: '/multiplayer/$lobbyId/game'
      preLoaderRoute: typeof AuthenticatedMultiplayerLobbyIdGameRouteImport
      parentRoute: typeof AuthenticatedMultiplayerLobbyIdRoute
    }
  }
}

interface AuthenticatedMultiplayerLobbyIdRouteChildren {
  AuthenticatedMultiplayerLobbyIdGameRoute: typeof AuthenticatedMultiplayerLobbyIdGameRoute
  AuthenticatedMultiplayerLobbyIdLobbyRoute: typeof AuthenticatedMultiplayerLobbyIdLobbyRoute
  AuthenticatedMultiplayerLobbyIdResultRoute: typeof AuthenticatedMultiplayerLobbyIdResultRoute
  AuthenticatedMultiplayerLobbyIdIndexRoute: typeof AuthenticatedMultiplayerLobbyIdIndexRoute
}

const AuthenticatedMultiplayerLobbyIdRouteChildren: AuthenticatedMultiplayerLobbyIdRouteChildren =
  {
    AuthenticatedMultiplayerLobbyIdGameRoute:
      AuthenticatedMultiplayerLobbyIdGameRoute,
    AuthenticatedMultiplayerLobbyIdLobbyRoute:
      AuthenticatedMultiplayerLobbyIdLobbyRoute,
    AuthenticatedMultiplayerLobbyIdResultRoute:
      AuthenticatedMultiplayerLobbyIdResultRoute,
    AuthenticatedMultiplayerLobbyIdIndexRoute:
      AuthenticatedMultiplayerLobbyIdIndexRoute,
  }

const AuthenticatedMultiplayerLobbyIdRouteWithChildren =
  AuthenticatedMultiplayerLobbyIdRoute._addFileChildren(
    AuthenticatedMultiplayerLobbyIdRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedSocialRoute: typeof AuthenticatedSocialRoute
  AuthenticatedMultiplayerLobbyIdRoute: typeof AuthenticatedMultiplayerLobbyIdRouteWithChildren
  AuthenticatedMultiplayerIndexRoute: typeof AuthenticatedMultiplayerIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedSocialRoute: AuthenticatedSocialRoute,
  AuthenticatedMultiplayerLobbyIdRoute:
    AuthenticatedMultiplayerLobbyIdRouteWithChildren,
  AuthenticatedMultiplayerIndexRoute: AuthenticatedMultiplayerIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  BugReportRoute: BugReportRoute,
  QuizRoute: QuizRoute,
  TrainingRoute: TrainingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
